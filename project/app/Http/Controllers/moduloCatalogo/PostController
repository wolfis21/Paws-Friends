<?php

namespace App\Http\Controllers;

use App\Models\Post;
use Illuminate\Http\Request;
use Illuminate\View\ViewServiceProvider;
use Illuminate\Support\Facades\Route;
use Illuminate\Support\Facades\Storage;



class PostController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        //
        $post = post::all();
        return view('store.post.index', compact('post') );
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
        $post = new Post();
        return view('store.post.create');
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        $request->validate([

            'title'=> 'required|string|min:3',
            'post_content'=> 'required',
            'img_ref'=> 'required|image|mimes:jpeg,png,jpg|max:2048',

        ]);

        $post = Post::create($request->all());

        if($request->hasFile('img_ref')){
            $nombre = $post->id.'.'.$request->file('img_ref')->getClientOriginalExtension();
            $img =$request->file('img_ref')->storeAs('public/img4', $nombre);
            $post->image = 'img4'.$nombre;
            $post->save();
        }

        return redirect()->route('<store.post.index')
        ->with('success', 'Post creado');

    }

    /**
     * Display the specified resource.
     */
    public function show(Post $id)
    {
        //
        $post = Post::find($id);
        return view('store.post.show', compact('post'));

    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(Post $id)
    {
        //
        $post = Post::find($id);
        return view('store.post.edit', compact('post'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, Post $id)
    {
        $request->validate([
            'title'=> 'required|string|min:3',
            'post_content'=> 'required',
            'img_ref'=> 'required|image|mimes:jpeg,png,jpg|max:2048',
        ]);

        $post = Post::find($id);

        if($request->hasFile('img_ref')){
            Storage::disk('public')->delete($post->image);
            $nombre = $post->id.'.'.$request->file('img_ref')->getClientOriginalExtension();
            $request->file('img_ref')->storeAs('public/img4', $nombre);
            $post->image = 'img4'.$nombre;
            $post->save();
        }

        $post->update($request->all());

        return redirect()->route('store.post.index')
        ->with('success', 'Post actualizado');

    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Post $id)
    {
        $post = Post::find($id);
        Storage::disk('public')->delete($post->image);
        $post->delete();
        return redirect()->route('store.post.index')
        ->with('success', 'Post borrado');
    }
}